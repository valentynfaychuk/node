openapi: 3.0.3
info:
  title: Amadeus Node HTTP API
  description: |
    REST API for the Amadeus blockchain node, providing access to blockchain data,
    peer information, wallet operations, and smart contract interactions.

    This API enables developers to:
    - Query blockchain state and transactions
    - Manage wallet balances and transfers
    - Interact with smart contracts
    - Monitor network peers and validators

    ## RPC Wrapper
    The node includes an RPC.API module that provides convenient wrapper functions
    for common operations like wallet transfers, balance queries, and transaction lookups.

    ## Authentication
    Most endpoints are publicly accessible for reading blockchain data.
    Transaction submission requires proper cryptographic signatures.

    ## Base URL
    The API is typically available at `http://localhost` (port 80 by default, configurable via HTTP_PORT env var) when running a local node.
  version: 1.1.9
  contact:
    name: Amadeus Project
    url: https://github.com/amadeus-robot/node
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://72.9.144.110
    description: Amadeus seed node (primary)
  - url: http://167.235.169.185
    description: Amadeus seed node (secondary)
  - url: http://37.27.238.30
    description: Amadeus seed node (tertiary)
  - url: http://localhost
    description: Local development server (HTTP_PORT=80)

tags:
  - name: peer
    x-page-title: Network & Peers
    x-page-description: Network topology and peer information
    x-page-icon: network-wired
    description: |
      Endpoints for querying network peer information, validator nodes,
      and network topology data.
  - name: chain
    x-page-title: Blockchain Data
    x-page-description: Access blockchain state and history
    x-page-icon: link
    description: |
      Core blockchain data endpoints for querying blocks, transactions,
      chain statistics, and blockchain state.
  - name: wallet
    x-page-title: Wallet Operations
    x-page-description: Balance queries and account management
    x-page-icon: wallet
    description: |
      Wallet-related operations including balance queries and
      account information retrieval.
  - name: transaction
    x-page-title: Transactions
    x-page-description: Transaction submission and queries
    x-page-icon: exchange-alt
    description: |
      Transaction submission, validation, and historical transaction queries.
  - name: contract
    x-page-title: Smart Contracts
    x-page-description: Contract interactions and state queries
    x-page-icon: file-contract
    description: |
      Smart contract interactions, bytecode validation, and contract state queries.
  - name: epoch
    x-page-title: Consensus & Epochs
    x-page-description: Validator information and consensus data
    x-page-icon: award
    description: |
      Consensus-related endpoints for validator scoring, epoch information,
      and network governance data.

paths:
  /api/peer/anr/{publicKey}:
    get:
      tags: [peer]
      summary: Get ANR by public key
      description: |
        Retrieves the Amadeus Node Record (ANR) for a specific peer by their public key.
        ANRs contain peer connection information, signatures, and metadata.
      operationId: getPeerAnr
      parameters:
        - name: publicKey
          in: path
          required: true
          description: Base58-encoded public key of the peer
          schema:
            type: string
            example: "7EVUJfpnEqK32KrzUAaR4Yf26KgT66AWwW63xSHw5mbgdQhV8iwL1NkHMAqTi5Hv3h"
      responses:
        '200':
          description: ANR found successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnrResponse'
        '404':
          description: ANR not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codeSamples:
        - lang: curl
          label: cURL
          source: |
            curl -X GET \
              "http://72.9.144.110/api/peer/anr/7EVUJfpnEqK32KrzUAaR4Yf26KgT66AWwW63xSHw5mbgdQhV8iwL1NkHMAqTi5Hv3h"
        - lang: javascript
          label: JavaScript
          source: |
            const response = await fetch(
              `http://72.9.144.110/api/peer/anr/${publicKey}`
            );
            const data = await response.json();
            console.log(data);

  /api/peer/anr_validators:
    get:
      tags: [peer]
      summary: Get validator ANRs
      description: Retrieves ANRs for all current validator nodes in the network
      operationId: getValidatorAnrs
      responses:
        '200':
          description: Validator ANRs retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnrsResponse'
      x-codeSamples:
        - lang: curl
          label: cURL
          source: |
            curl -X GET "http://72.9.144.110/api/peer/anr_validators"

  /api/peer/anr:
    get:
      tags: [peer]
      summary: Get all ANRs
      description: Retrieves ANRs for all known peers in the network
      operationId: getAllAnrs
      responses:
        '200':
          description: All ANRs retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnrsResponse'

  /api/peer/nodes:
    get:
      tags: [peer]
      summary: Get all nodes for web display
      description: Retrieves formatted node information suitable for web interfaces
      operationId: getAllNodes
      responses:
        '200':
          description: Nodes retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesResponse'

  /api/peer/trainers:
    get:
      tags: [peer]
      summary: Get trainer nodes
      description: Retrieves information about all trainer/validator nodes
      operationId: getTrainers
      responses:
        '200':
          description: Trainers retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainersResponse'

  /api/peer/removed_trainers:
    get:
      tags: [peer]
      summary: Get removed trainers
      description: Retrieves information about trainers that have been removed from the network
      operationId: getRemovedTrainers
      responses:
        '200':
          description: Removed trainers retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainersResponse'

  /api/chain/stats:
    get:
      tags: [chain]
      summary: Get blockchain statistics
      description: |
        Retrieves current blockchain statistics including height, transaction counts,
        and network metrics.
      operationId: getChainStats
      responses:
        '200':
          description: Chain statistics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChainStatsResponse'
      x-codeSamples:
        - lang: curl
          label: cURL
          source: |
            curl -X GET "http://72.9.144.110/api/chain/stats"
        - lang: javascript
          label: JavaScript
          source: |
            const response = await fetch('http://72.9.144.110/api/chain/stats');
            const stats = await response.json();
            console.log(`Current height: ${stats.stats.height}`);

  /api/chain/tip:
    get:
      tags: [chain]
      summary: Get chain tip
      description: Retrieves the current tip (latest block) of the blockchain
      operationId: getChainTip
      responses:
        '200':
          description: Chain tip retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChainTipResponse'

  /api/chain/height/{height}:
    get:
      tags: [chain]
      summary: Get entries by height
      description: Retrieves all blockchain entries at a specific height
      operationId: getEntriesByHeight
      parameters:
        - name: height
          in: path
          required: true
          description: Blockchain height to query
          schema:
            type: integer
            minimum: 0
            example: 12345
      responses:
        '200':
          description: Entries retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntriesResponse'
      x-codeSamples:
        - lang: curl
          label: cURL
          source: |
            curl -X GET "http://72.9.144.110/api/chain/height/12345"

  /api/chain/height_with_txs/{height}:
    get:
      tags: [chain]
      summary: Get entries by height with transactions
      description: Retrieves blockchain entries at a specific height including all transactions
      operationId: getEntriesByHeightWithTxs
      parameters:
        - name: height
          in: path
          required: true
          description: Blockchain height to query
          schema:
            type: integer
            minimum: 0
            example: 12345
      responses:
        '200':
          description: Entries with transactions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntriesWithTxsResponse'

  /api/chain/tx/{txId}:
    get:
      tags: [transaction]
      summary: Get transaction by ID
      description: Retrieves a specific transaction by its ID
      operationId: getTransactionById
      parameters:
        - name: txId
          in: path
          required: true
          description: Transaction ID (hash)
          schema:
            type: string
            example: "abc123def456..."
      responses:
        '200':
          description: Transaction retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '404':
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codeSamples:
        - lang: curl
          label: cURL
          source: |
            curl -X GET "http://72.9.144.110/api/chain/tx/abc123def456..."

  /api/chain/tx_events_by_account/{account}:
    get:
      tags: [transaction]
      summary: Get transaction events by account
      description: |
        Retrieves transaction events for a specific account with optional filtering.
        Supports pagination and various filter options.
      operationId: getTransactionEventsByAccount
      parameters:
        - name: account
          in: path
          required: true
          description: Account public key (Base58 encoded)
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of results to return
          schema:
            type: integer
            default: 100
            minimum: 1
            maximum: 1000
        - name: offset
          in: query
          description: Number of results to skip
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: sort
          in: query
          description: Sort order for results
          schema:
            type: string
            enum: [asc, desc]
            default: asc
        - name: cursor_b58
          in: query
          description: Base58-encoded cursor for pagination
          schema:
            type: string
        - name: contract_b58
          in: query
          description: Filter by contract address (Base58 encoded)
          schema:
            type: string
        - name: function
          in: query
          description: Filter by contract function name
          schema:
            type: string
        - name: type
          in: query
          description: Filter by transaction type
          schema:
            type: string
            enum: [sent, recv]
      responses:
        '200':
          description: Transaction events retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionEventsResponse'

  /api/chain/txs_in_entry/{entryHash}:
    get:
      tags: [transaction]
      summary: Get transactions in entry
      description: Retrieves all transactions contained in a specific blockchain entry
      operationId: getTransactionsInEntry
      parameters:
        - name: entryHash
          in: path
          required: true
          description: Entry hash
          schema:
            type: string
      responses:
        '200':
          description: Transactions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsInEntryResponse'

  /api/wallet/balance/{publicKey}:
    get:
      tags: [wallet]
      summary: Get wallet balance for default token
      description: Retrieves the AMA token balance for a specific public key
      operationId: getWalletBalance
      parameters:
        - name: publicKey
          in: path
          required: true
          description: Base58-encoded public key
          schema:
            type: string
          example: "7EVUJfpnEqK32KrzUAaR4Yf26KgT66AWwW63xSHw5mbgdQhV8iwL1NkHMAqTi5Hv3h"
      responses:
        '200':
          description: Balance retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResponse'
      x-codeSamples:
        - lang: curl
          label: cURL
          source: |
            curl -X GET "http://72.9.144.110/api/wallet/balance/{publicKey}"

  /api/wallet/balance/{publicKey}/{symbol}:
    get:
      tags: [wallet]
      summary: Get wallet balance for specific token
      description: Retrieves the balance for a specific token symbol
      operationId: getWalletBalanceBySymbol
      parameters:
        - name: publicKey
          in: path
          required: true
          description: Base58-encoded public key
          schema:
            type: string
          example: "7EVUJfpnEqK32KrzUAaR4Yf26KgT66AWwW63xSHw5mbgdQhV8iwL1NkHMAqTi5Hv3h"
        - name: symbol
          in: path
          required: true
          description: Token symbol (e.g., AMA, USDT)
          schema:
            type: string
            example: AMA
      responses:
        '200':
          description: Balance retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResponse'

  /api/wallet/balance_all/{publicKey}:
    get:
      tags: [wallet]
      summary: Get all token balances
      description: Retrieves balances for all tokens held by a specific public key
      operationId: getAllWalletBalances
      parameters:
        - name: publicKey
          in: path
          required: true
          description: Base58-encoded public key
          schema:
            type: string
          example: "7EVUJfpnEqK32KrzUAaR4Yf26KgT66AWwW63xSHw5mbgdQhV8iwL1NkHMAqTi5Hv3h"
      responses:
        '200':
          description: All balances retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllBalancesResponse'

  /api/tx/submit:
    post:
      tags: [transaction]
      summary: Submit transaction (POST body)
      description: |
        Submits a signed transaction to the network for processing.
        The transaction must be properly signed and formatted.
      operationId: submitTransaction
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
              description: Packed and signed transaction data
          text/plain:
            schema:
              type: string
              description: Base58-encoded packed transaction
      responses:
        '200':
          description: Transaction submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSubmitResponse'
        '400':
          description: Invalid transaction format or signature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codeSamples:
        - lang: curl
          label: cURL (Binary)
          source: |
            curl -X POST \
              -H "Content-Type: application/octet-stream" \
              --data-binary @transaction.bin \
              "http://72.9.144.110/api/tx/submit"
        - lang: curl
          label: cURL (Base58)
          source: |
            curl -X POST \
              -H "Content-Type: text/plain" \
              -d "7EVUJfpnEqK32KrzUAaR4Yf26KgT66AWwW63xSHw5mbgdQhV8iwL1NkHMAqTi5Hv3h" \
              "http://72.9.144.110/api/tx/submit"

  /api/tx/submit/{txPackedBase58}:
    get:
      tags: [transaction]
      summary: Submit transaction (GET URL)
      description: Submits a Base58-encoded transaction via URL parameter
      operationId: submitTransactionViaUrl
      parameters:
        - name: txPackedBase58
          in: path
          required: true
          description: Base58-encoded packed transaction
          schema:
            type: string
      responses:
        '200':
          description: Transaction submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionSubmitResponse'

  /api/contract/validate_bytecode:
    post:
      tags: [contract]
      summary: Validate contract bytecode
      description: Validates WebAssembly contract bytecode for deployment
      operationId: validateContractBytecode
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
              description: WebAssembly bytecode
      responses:
        '200':
          description: Bytecode validation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BytecodeValidationResponse'

  /api/contract/get/{contractAddress}/{key}:
    get:
      tags: [contract]
      summary: Get contract state value
      description: Retrieves a specific value from contract storage
      operationId: getContractState
      parameters:
        - name: contractAddress
          in: path
          required: true
          description: Base58-encoded contract address
          schema:
            type: string
        - name: key
          in: path
          required: true
          description: Storage key to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Contract state retrieved successfully
          content:
            application/json:
              schema:
                type: object
                description: Contract state value (format varies)

  /api/contract/richlist:
    get:
      tags: [contract]
      summary: Get token richlist
      description: Retrieves the richlist showing largest token holders
      operationId: getTokenRichlist
      responses:
        '200':
          description: Richlist retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RichlistResponse'

  /api/epoch/score:
    get:
      tags: [epoch]
      summary: Get current epoch score
      description: Retrieves the epoch score for the current validator
      operationId: getCurrentEpochScore
      responses:
        '200':
          description: Epoch score retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpochScoreResponse'

  /api/epoch/score/{publicKey}:
    get:
      tags: [epoch]
      summary: Get epoch score for validator
      description: Retrieves the epoch score for a specific validator
      operationId: getEpochScoreByValidator
      parameters:
        - name: publicKey
          in: path
          required: true
          description: Validator public key
          schema:
            type: string
          example: "7EVUJfpnEqK32KrzUAaR4Yf26KgT66AWwW63xSHw5mbgdQhV8iwL1NkHMAqTi5Hv3h"
      responses:
        '200':
          description: Epoch score retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpochScoreResponse'

  /api/epoch/get_emission_address/{publicKey}:
    get:
      tags: [epoch]
      summary: Get emission address
      description: Retrieves the emission address for a validator
      operationId: getEmissionAddress
      parameters:
        - name: publicKey
          in: path
          required: true
          description: Validator public key
          schema:
            type: string
          example: "7EVUJfpnEqK32KrzUAaR4Yf26KgT66AWwW63xSHw5mbgdQhV8iwL1NkHMAqTi5Hv3h"
      responses:
        '200':
          description: Emission address retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmissionAddressResponse'

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          enum: [not_found, invalid_format, network_error]
          description: Error type
      required: [error]

    AnrResponse:
      type: object
      properties:
        error:
          type: string
          enum: [ok]
        anr:
          $ref: '#/components/schemas/ANR'
      required: [error]

    AnrsResponse:
      type: object
      properties:
        error:
          type: string
          enum: [ok]
        anrs:
          type: array
          items:
            $ref: '#/components/schemas/ANR'
      required: [error, anrs]

    ANR:
      type: object
      description: Amadeus Node Record containing peer information
      properties:
        ip4:
          type: string
          format: ipv4
          description: IPv4 address of the node
          example: "192.168.1.100"
        pk:
          type: string
          description: Base58-encoded public key
          example: "7EVUJfpnEqK32KrzUAaR4Yf26KgT66AWwW63xSHw5mbgdQhV8iwL1NkHMAqTi5Hv3h"
        pop:
          type: string
          description: Proof of possession signature
        port:
          type: integer
          description: Network port
          example: 36969
        signature:
          type: string
          description: ANR signature
        ts:
          type: integer
          description: Timestamp of ANR creation
        version:
          type: string
          description: Node software version
          example: "1.1.9"
        anr_name:
          type: string
          description: Optional node name
        anr_desc:
          type: string
          description: Optional node description
      required: [ip4, pk, pop, port, signature, ts, version]

    NodesResponse:
      type: object
      properties:
        error:
          type: string
          enum: [ok]
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/NodeInfo'
      required: [error, nodes]

    NodeInfo:
      type: object
      properties:
        pk:
          type: string
          description: Public key
        ip4:
          type: string
          description: IP address
        version:
          type: string
          description: Software version
        latency:
          type: integer
          description: Network latency in milliseconds
        last_message:
          type: integer
          description: Timestamp of last message
        online:
          type: boolean
          description: Whether node is currently online

    TrainersResponse:
      type: object
      properties:
        error:
          type: string
          enum: [ok]
        trainers:
          type: array
          items:
            type: string
            description: Trainer public keys
      required: [error, trainers]

    ChainStatsResponse:
      type: object
      properties:
        error:
          type: string
          enum: [ok]
        stats:
          $ref: '#/components/schemas/ChainStats'
      required: [error, stats]

    ChainStats:
      type: object
      properties:
        height:
          type: integer
          description: Current blockchain height
          example: 12345
        total_transactions:
          type: integer
          description: Total number of transactions
        total_accounts:
          type: integer
          description: Total number of accounts
        network_hash_rate:
          type: string
          description: Network hash rate
        difficulty:
          type: string
          description: Current difficulty

    ChainTipResponse:
      type: object
      properties:
        error:
          type: string
          enum: [ok]
        entry:
          $ref: '#/components/schemas/BlockEntry'
      required: [error, entry]

    EntriesResponse:
      type: object
      properties:
        error:
          type: string
          enum: [ok]
        entries:
          type: array
          items:
            $ref: '#/components/schemas/BlockEntry'
      required: [error, entries]

    EntriesWithTxsResponse:
      type: object
      properties:
        error:
          type: string
          enum: [ok]
        entries:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/BlockEntry'
              - type: object
                properties:
                  txs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transaction'
      required: [error, entries]

    BlockEntry:
      type: object
      properties:
        hash:
          type: string
          description: Entry hash
        height:
          type: integer
          description: Block height
        timestamp:
          type: integer
          description: Block timestamp
        previous_hash:
          type: string
          description: Previous block hash
        merkle_root:
          type: string
          description: Merkle tree root
        signature:
          type: string
          description: Block signature
        mask:
          type: string
          description: Consensus mask

    TransactionResponse:
      type: object
      properties:
        error:
          type: string
          enum: [ok, not_found]
        transaction:
          $ref: '#/components/schemas/Transaction'

    Transaction:
      type: object
      properties:
        hash:
          type: string
          description: Transaction hash
        from:
          type: string
          description: Sender public key
        to:
          type: string
          description: Recipient address
        amount:
          type: string
          description: Transaction amount
        symbol:
          type: string
          description: Token symbol
        fee:
          type: string
          description: Transaction fee (calculated as 1 + bytes/1024 AMA cents for epoch >= 295)
        nonce:
          type: integer
          description: Transaction nonce
        timestamp:
          type: integer
          description: Transaction timestamp
        signature:
          type: string
          description: Transaction signature
        type:
          type: string
          enum: [transfer, contract_call, contract_deploy]
          description: Transaction type

    TransactionEventsResponse:
      type: object
      properties:
        cursor:
          type: string
          description: Pagination cursor for next page
        txs:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'

    TransactionsInEntryResponse:
      type: object
      properties:
        error:
          type: string
          enum: [ok]
        txs:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
      required: [error, txs]

    BalanceResponse:
      type: object
      properties:
        error:
          type: string
          enum: [ok]
        balance:
          $ref: '#/components/schemas/Balance'
      required: [error, balance]

    AllBalancesResponse:
      type: object
      properties:
        error:
          type: string
          enum: [ok]
        balances:
          type: array
          items:
            $ref: '#/components/schemas/Balance'
      required: [error, balances]

    Balance:
      type: object
      properties:
        symbol:
          type: string
          description: Token symbol
          example: "AMA"
        flat:
          type: integer
          description: Balance in smallest unit (atoms)
          example: 1000000000000
        float:
          type: number
          description: Human-readable balance
          example: 1000.0
      required: [symbol, flat, float]

    TransactionSubmitResponse:
      type: object
      properties:
        error:
          type: string
          enum: [ok, invalid_signature, insufficient_funds, network_error]
        tx_hash:
          type: string
          description: Transaction hash if successful
        message:
          type: string
          description: Additional information

    BytecodeValidationResponse:
      type: object
      properties:
        error:
          type: string
          enum: [ok, invalid_bytecode, too_large, unsupported_features]
        valid:
          type: boolean
          description: Whether bytecode is valid
        gas_estimate:
          type: integer
          description: Estimated gas cost for deployment
        warnings:
          type: array
          items:
            type: string
          description: Validation warnings

    RichlistResponse:
      type: object
      properties:
        error:
          type: string
          enum: [ok]
        richlist:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
                description: Account address
              balance:
                type: string
                description: Account balance
              rank:
                type: integer
                description: Rank in richlist
      required: [error, richlist]

    EpochScoreResponse:
      type: object
      properties:
        error:
          type: string
          enum: [ok]
        score:
          type: number
          description: Epoch score
        epoch:
          type: integer
          description: Current epoch number
        rank:
          type: integer
          description: Validator rank

    EmissionAddressResponse:
      type: object
      properties:
        error:
          type: string
          enum: [ok]
        emission_address:
          type: string
          description: Emission address for the validator
      required: [error, emission_address]

  examples:
    SampleAnr:
      summary: Example ANR response
      value:
        error: ok
        anr:
          ip4: "192.168.1.100"
          pk: "7EVUJfpnEqK32KrzUAaR4Yf26KgT66AWwW63xSHw5mbgdQhV8iwL1NkHMAqTi5Hv3h"
          pop: "signature_proof_of_possession"
          port: 36969
          signature: "anr_signature_data"
          ts: 1695123456
          version: "1.1.9"
          anr_name: "MyAmadeusNode"
          anr_desc: "High-performance Amadeus validator"

    SampleBalance:
      summary: Example balance response
      value:
        error: ok
        balance:
          symbol: "AMA"
          flat: 1000000000000
          float: 1000.0

    SampleTransaction:
      summary: Example transaction response
      value:
        error: ok
        transaction:
          hash: "abc123def456..."
          from: "7EVUJfpnEqK32KrzUAaR4Yf26KgT66AWwW63xSHw5mbgdQhV8iwL1NkHMAqTi5Hv3h"
          to: "7UTNGrLTnL6HLZ5Gp3qVMtJvUVVHocKewN2y2cpstSh6oib9y4yZtWaWALg1j62CDH"
          amount: "100.0"
          symbol: "AMA"
          fee: "0.1"
          nonce: 42
          timestamp: 1695123456
          signature: "transaction_signature"
          type: "transfer"

    SampleChainStats:
      summary: Example chain statistics
      value:
        error: ok
        stats:
          height: 12345
          total_transactions: 98765
          total_accounts: 5432
          network_hash_rate: "1.2 TH/s"
          difficulty: "0x1bcdef"